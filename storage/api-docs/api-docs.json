{
    "openapi": "3.0.0",
    "info": {
        "title": "Piazza API",
        "description": "API documentation for Piazza.",
        "version": "1.0"
    },
    "paths": {
        "/api/acquisitions": {
            "get": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Get all acquisitions",
                "operationId": "0ff44b8f44f4865443d39ae08f05170a",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name, email, city, or state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of acquisitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Acquisition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Create a new acquisition",
                "operationId": "89db012f6d73f9f14d357666af9cd40b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Acquisition created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/acquisitions/{id}": {
            "get": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Get a single acquisition",
                "operationId": "9073e6609f69c49a8f93387165cc559d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Acquisition ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Acquisition details"
                    },
                    "404": {
                        "description": "Acquisition not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Update an acquisition",
                "operationId": "7a72171a52019c3ea0a8c16cd84041f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Acquisition ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Acquisition updated"
                    },
                    "404": {
                        "description": "Acquisition not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Delete an acquisition",
                "operationId": "547b7705f06e6d23b2406abaf161a115",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Acquisition ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Acquisition deleted"
                    },
                    "404": {
                        "description": "Acquisition not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdefg123456"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get all contacts",
                "operationId": "0f9efb5609dbb039b35ecafb28e492a2",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (pending, completed)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority (low, medium, high)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name, email, or message",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create a new contact",
                "operationId": "a3b0baf957a16c1ed505f2e8985c254c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/contacts/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get a single contact",
                "operationId": "4b37f4c90f5cd7974a09bd688ac4d3dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact details"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update a contact",
                "operationId": "554514967b71c75698b6cef012de4420",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact updated"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a contact",
                "operationId": "3a78f2af1871a21a2b5a492134d72017",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contact deleted"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get all events",
                "operationId": "7058ab7c89d20c752b6afd6d808f6526",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by event title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "operationId": "508895e03d7f10edac84357084c87b20",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a single event",
                "operationId": "6f743f71f7a88dbe57be1d9c9ebf47cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "operationId": "fb130dcf1ab4d7abbd3a173741df1f8f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "operationId": "b8c8f4b41a32532f5e9f7146e511bc61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event deleted"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/feedback": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get published feedback",
                "operationId": "b9a59e3fa02ac43b70e3aed8159d20fb",
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter feedback by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of published feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feedback"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Create customer feedback",
                "operationId": "73567c0c6ca97cd1fcb79ddac458d4ce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/feedback/admin": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all feedback (Admin only)",
                "operationId": "655b5d626c295eb5ac612c9da46c1ae6",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter feedback by status (Pending, Published, Archived)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of feedback"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/feedback/{id}": {
            "put": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Update feedback status or comment (Admin only)",
                "operationId": "3215f0f7d7c7aec0c9fafdd5b94159b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback updated"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete feedback (Admin only)",
                "operationId": "e92c75dd4ee77bdb93b34df76a4757df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Feedback deleted"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jobs": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get all jobs",
                "operationId": "9538d30d530d4c3680ea31fe228944e2",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter jobs by status (active, inactive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "job_type",
                        "in": "query",
                        "description": "Filter jobs by job type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter jobs by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by job title or job description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Create a new job posting",
                "operationId": "36deb2a6480382cf8385911c10aeebf0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Job created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jobs/{id}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get a single job posting",
                "operationId": "6de31489b41fa51255446ac2ad15b7fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job details"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Update a job posting",
                "operationId": "66762b778fbd20dd4fbd09628dabba17",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job updated"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Delete a job posting",
                "operationId": "5537fd998abc3a62eef8c09e4ae52000",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Job deleted"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "operationId": "c22aa1cae7ab2b2ad315141d06fec369",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or street",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (true or false)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "operationId": "055665bfbdc18cab3dc956925a9000b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations/{id}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a single location",
                "operationId": "bcaac2b6f85e83cdc99139be535c66e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location details"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location",
                "operationId": "3ac5d4120b6fb23f55f179649493a2d8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location",
                "operationId": "721591ee086203214e6eb54f25625656",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Location deleted"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get paginated list of users",
                "operationId": "8535da4a404df62ab2b62d7c92793f92",
                "responses": {
                    "200": {
                        "description": "Paginated list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "ce054f86d47a9740ebe4d221355b6cc7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid role selected"
                    },
                    "500": {
                        "description": "User creation failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user",
                "operationId": "fdc01f74899cbf594b61e950a8e5f642",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "b16ed85bbe1d08e30c678d1836444c07",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "User update failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "2bdfd5ef37cb1f88768c2f8bd2d0dfb4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "User deletion failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/media": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Upload a media file",
                "operationId": "eeaf63768829900435c84f27180703fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "file"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/media/{id}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Get media details",
                "operationId": "eddcbeb0a30c2ed9f7976b92953256d6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media details"
                    },
                    "404": {
                        "description": "Media not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Update a media file",
                "operationId": "079d5f69f1f944b17f8c531f7010f36a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Media updated successfully"
                    },
                    "404": {
                        "description": "Media not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Media"
                ],
                "summary": "Delete a media file",
                "operationId": "c72a2960d2dac76e80e4ff469fc99b09",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Media deleted"
                    },
                    "404": {
                        "description": "Media not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/milestones": {
            "get": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Get all milestones",
                "operationId": "a54498f155f45cfd06e14071b7c56520",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter milestones by status (pending, completed, in_progress)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter milestones from a start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter milestones until an end date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by milestone title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of milestones",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Milestone"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Create a new milestone",
                "operationId": "0a59d1add34138afccc83b9ecbcd52fe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Milestone"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Milestone created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/milestones/{id}": {
            "get": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Get a single milestone",
                "operationId": "a8ecf22e431f95bc690af942625663ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Milestone ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Milestone details"
                    },
                    "404": {
                        "description": "Milestone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Update a milestone",
                "operationId": "be14ab8ea7063cf95671a32269bbe373",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Milestone ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Milestone"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Milestone updated successfully"
                    },
                    "404": {
                        "description": "Milestone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Delete a milestone",
                "operationId": "22df6235f63f6273e832ec6e6c197795",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Milestone ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Milestone deleted"
                    },
                    "404": {
                        "description": "Milestone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/team-members": {
            "get": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Get all team members",
                "operationId": "b34e8010b0fe4331a0934852350422cf",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter team members by role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, inactive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or bio",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of team members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamMember"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Create a new team member",
                "operationId": "ebceff7b8479b39a15c4274fb60638fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Team member created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/team-members/{id}": {
            "get": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Get a single team member",
                "operationId": "cd8cadc1715392bfc4f329323f93dd72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team member details"
                    },
                    "404": {
                        "description": "Team member not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Update a team member",
                "operationId": "d6424fd97eae26513aa3e1b7873634a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Team member updated successfully"
                    },
                    "404": {
                        "description": "Team member not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/team-members/{id}": {
            "delete": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Delete a team member",
                "operationId": "f1bc65ac23b573e2cb7735a83630c23c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Team member deleted"
                    },
                    "404": {
                        "description": "Team member not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/positions": {
            "get": {
                "tags": [
                    "Workstream"
                ],
                "summary": "Get all published Workstream positions",
                "operationId": "267c2aaefd78860281d1d17a0611280d",
                "responses": {
                    "200": {
                        "description": "List of published positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Software Engineer"
                                            },
                                            "location": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "published"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch positions."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Acquisition": {
                "required": [
                    "name",
                    "email",
                    "city",
                    "state"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "city": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "state": {
                        "type": "string",
                        "example": "CA"
                    },
                    "status": {
                        "type": "string",
                        "example": "New"
                    },
                    "priority": {
                        "type": "string",
                        "example": "High"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "required": [
                    "name",
                    "email",
                    "message"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "message": {
                        "type": "string",
                        "example": "Hello, I have a question."
                    },
                    "contact_via_email": {
                        "type": "boolean",
                        "example": true
                    },
                    "contact_via_phone": {
                        "type": "boolean",
                        "example": false
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "priority": {
                        "type": "string",
                        "example": "medium"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Event": {
                "required": [
                    "title",
                    "description",
                    "datetime",
                    "location",
                    "capacity"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Tech Conference 2025"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/event-image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "A conference about the latest in technology."
                    },
                    "datetime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-30 15:29:58"
                    },
                    "location": {
                        "type": "string",
                        "example": "Los Angeles Convention Center"
                    },
                    "capacity": {
                        "type": "integer",
                        "example": 500
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Feedback": {
                "required": [
                    "customer_name",
                    "comment",
                    "location_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "customer_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great service and friendly staff."
                    },
                    "location_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "status": {
                        "type": "string",
                        "example": "Pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Job": {
                "required": [
                    "job_title",
                    "min_salary",
                    "max_salary",
                    "city",
                    "state",
                    "job_type",
                    "job_description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "job_title": {
                        "type": "string",
                        "example": "Software Engineer"
                    },
                    "min_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "max_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 70000
                    },
                    "city": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "state": {
                        "type": "string",
                        "example": "CA"
                    },
                    "job_type": {
                        "type": "string",
                        "example": "Full-time"
                    },
                    "job_description": {
                        "type": "string",
                        "example": "Develop and maintain software applications."
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "Location": {
                "required": [
                    "name",
                    "street",
                    "city",
                    "state",
                    "zip"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Downtown Office"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/location-image.jpg"
                    },
                    "street": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "state": {
                        "type": "string",
                        "example": "CA"
                    },
                    "zip": {
                        "type": "string",
                        "example": "90001"
                    },
                    "description": {
                        "type": "string",
                        "example": "Main headquarters"
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "lc_url": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Media": {
                "required": [
                    "user_id",
                    "file_name",
                    "file_path",
                    "thumbnail_path",
                    "file_size",
                    "mime_type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "file_name": {
                        "type": "string",
                        "example": "image.jpg"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "/storage/uploads/image.jpg"
                    },
                    "thumbnail_path": {
                        "type": "string",
                        "example": "/storage/uploads/thumbnails/thumb_image.jpg"
                    },
                    "file_size": {
                        "type": "integer",
                        "example": 204800
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Milestone": {
                "required": [
                    "date",
                    "title"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-01"
                    },
                    "title": {
                        "type": "string",
                        "example": "Project Kickoff"
                    },
                    "description": {
                        "type": "string",
                        "example": "Initial phase of the project."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "in_progress"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TeamMember": {
                "required": [
                    "name",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "role": {
                        "type": "string",
                        "example": "Project Manager"
                    },
                    "profile_image": {
                        "type": "string",
                        "example": "https://example.com/avatar.jpg",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "example": "Experienced project manager with a focus on agile methodologies.",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "user"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@gmail.com"
                    },
                    "image": {
                        "type": "string",
                        "example": "storage/user/avatar.jpg"
                    },
                    "role": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Acquisitions",
            "description": "Acquisitions"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Contacts",
            "description": "Contacts"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Feedback",
            "description": "Feedback"
        },
        {
            "name": "Jobs",
            "description": "Jobs"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Media",
            "description": "Media"
        },
        {
            "name": "Milestones",
            "description": "Milestones"
        },
        {
            "name": "Team Members",
            "description": "Team Members"
        },
        {
            "name": "Workstream",
            "description": "Workstream"
        }
    ]
}