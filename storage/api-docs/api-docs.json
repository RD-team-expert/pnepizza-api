{
    "openapi": "3.0.0",
    "info": {
        "title": "Piazza API",
        "description": "API documentation for Piazza.",
        "version": "1.0"
    },
    "paths": {
        "/api/v1/acquisitions": {
            "get": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Get all acquisitions",
                "operationId": "7177cd654e5ec482e2e2cde9c4cc20ad",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name, email, city, or state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of acquisitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Acquisition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Create a new acquisition",
                "operationId": "1c42bcca44d60b563826e01bef86f386",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Acquisition created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/acquisitions/{id}": {
            "get": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Get a single acquisition",
                "operationId": "9df3b73bea84b856c89d03357f91eee0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Acquisition ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Acquisition details"
                    },
                    "404": {
                        "description": "Acquisition not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Update an acquisition",
                "operationId": "4bd14deab04d2bb8da5a3b132cd4fdee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Acquisition ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Acquisition updated"
                    },
                    "404": {
                        "description": "Acquisition not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Acquisitions"
                ],
                "summary": "Delete an acquisition",
                "operationId": "5c54ebf6d18cdba28af58137cc1eeb53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Acquisition ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Acquisition deleted"
                    },
                    "404": {
                        "description": "Acquisition not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "da2ca4d7a5cdec77b8b45a20373535cb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdefg123456"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "c4eddaf1a2e990cc90e4326c0d731d41",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get all contacts",
                "operationId": "852ed2762dbbe0a94ccfc4c97587621a",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (pending, completed)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority (low, medium, high)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name, email, or message",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create a new contact",
                "operationId": "379869295076c3201047aea1a0ece726",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/contacts/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get a single contact",
                "operationId": "b50e403e9334c34bf4a1d319a863d3e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact details"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update a contact",
                "operationId": "a6027289e451f3cd7ddfec1b24203aae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact updated"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a contact",
                "operationId": "564a2f7f26488abf9de14d86fac81557",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contact deleted"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get all events",
                "operationId": "b2e55feb6b984fe8bede8d15c4028b7d",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by event title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "operationId": "dd683f690eaabf94d57d985cdf4f2120",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a single event",
                "operationId": "cab1311cf1b9c45ea4813e7b5d0fd908",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "operationId": "f2f9aa7bdb3bb955ea94ff859a7227d8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "operationId": "864e3bd26fe09c0fecb665af777c091a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event deleted"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/feedback": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get published feedback",
                "operationId": "8fb97ca912166e77b49e237147559627",
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter feedback by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of published feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feedback"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Create customer feedback",
                "operationId": "f32305d0fc7b2a84bf867e89355a06b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/feedback/admin": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all feedback (Admin only)",
                "operationId": "3de361155fb0d96a237589200fbd7b92",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter feedback by status (Pending, Published, Archived)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of feedback"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/feedback/{id}": {
            "put": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Update feedback status or comment (Admin only)",
                "operationId": "9f04cba4796661cbe4349598fed6b95c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback updated"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete feedback (Admin only)",
                "operationId": "088d5f1a00163dfa45f02e2147817ab7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Feedback deleted"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/jobs": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get all jobs",
                "operationId": "c98ae9d463f48beffe8b3f90dd9f209f",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter jobs by status (active, inactive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "job_type",
                        "in": "query",
                        "description": "Filter jobs by job type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter jobs by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by job title or job description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Create a new job posting",
                "operationId": "54fc4d863c91b9ba2bb8183269cf83e2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Job created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/jobs/{id}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get a single job posting",
                "operationId": "be401cce2258e81e42ef1e9c9ffe5493",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job details"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Update a job posting",
                "operationId": "b46a91bd306bded8425a80e5849b7f43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job updated"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Delete a job posting",
                "operationId": "8626e9fa83d434a94f114e29330f33aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Job deleted"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "operationId": "9bbe66ccd9a8de4d94275b1f6c4be2b9",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or street",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (true or false)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "operationId": "3af24cfa81f4c045f6490e97e6653698",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/{id}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a single location",
                "operationId": "6bc92e1682723116be7ea8ff826b9f4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location details"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location",
                "operationId": "57f14eec99aa037d5624561c548f8ad9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location",
                "operationId": "d69677f30e8f588247d039bb36d50082",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Location deleted"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get paginated list of users",
                "operationId": "cd392c45ccb6bb3b890b5f33545fef56",
                "responses": {
                    "200": {
                        "description": "Paginated list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "a16405bfefa6321c5387b109097f363a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid role selected"
                    },
                    "500": {
                        "description": "User creation failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user",
                "operationId": "01afe9a300d61fff2731c67306aaaa9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "33b0193579328e471e55f5909b058ada",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "User update failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "d5d9c407373d617d6de538f306cb715c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "User deletion failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/media": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Get paginated list of media files",
                "operationId": "38e169c977c89abd4302c456a21601ff",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of media files"
                    }
                }
            },
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Upload a media file",
                "operationId": "8ad7a1074d93540b41dc18dd175ce90e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "file"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/media/{id}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Get media details",
                "operationId": "d8e600d4d0bd0c2043e72b72081194e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media details"
                    },
                    "404": {
                        "description": "Media not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Update a media file",
                "operationId": "589c55a5264d212da8a58c3e0c0ea5c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Media updated successfully"
                    },
                    "404": {
                        "description": "Media not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Media"
                ],
                "summary": "Delete a media file",
                "operationId": "e0b13c20747983d68250465d708d8cbe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Media deleted"
                    },
                    "404": {
                        "description": "Media not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/milestones": {
            "get": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Get all milestones",
                "operationId": "06833a04e8006652914227c41ad2cb1c",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter milestones by status (pending, completed, in_progress)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter milestones from a start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter milestones until an end date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by milestone title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of milestones",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Milestone"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Create a new milestone",
                "operationId": "bffeba129f5426c4182b81ff4633e6d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Milestone"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Milestone created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/milestones/{id}": {
            "get": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Get a single milestone",
                "operationId": "6e8b7d36235414b7468a7cf345de7151",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Milestone ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Milestone details"
                    },
                    "404": {
                        "description": "Milestone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Update a milestone",
                "operationId": "04950d89d6048cbccd535c98f7ca0657",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Milestone ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Milestone"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Milestone updated successfully"
                    },
                    "404": {
                        "description": "Milestone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Delete a milestone",
                "operationId": "a04af678540ce55a94f34a2ad99a47f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Milestone ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Milestone deleted"
                    },
                    "404": {
                        "description": "Milestone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Fetch all notifications for admin users",
                "operationId": "f840a445048dd4bb44357e5a7918027e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "App\\Notifications\\OrderShipped"
                                            },
                                            "data": {
                                                "type": "object",
                                                "example": {
                                                    "order_id": 123
                                                }
                                            },
                                            "read_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-10-01T12:00:00Z"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-10-01T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-10-01T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No admin users found"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/{id}/mark-as-read": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark a notification as read",
                "operationId": "76d6dbcc25719a787b3d23dc01a9c717",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/team-members": {
            "get": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Get all team members",
                "operationId": "8477a66bd31ee1b46e1939ede9f078b8",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter team members by role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, inactive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or bio",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of team members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamMember"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Create a new team member",
                "operationId": "036e5cb7eeea02f8a935fa0bc1ca1dc1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Team member created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/team-members/{id}": {
            "get": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Get a single team member",
                "operationId": "dd7c339b3495de58ce2754833900bfda",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team member details"
                    },
                    "404": {
                        "description": "Team member not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Update a team member",
                "operationId": "ce87d628494e5c57f7aa2ea7e796e65a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Team member updated successfully"
                    },
                    "404": {
                        "description": "Team member not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/team-members/{id}": {
            "delete": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Delete a team member",
                "operationId": "86b0f55966d283fa0bc885f645e6de20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Team member deleted"
                    },
                    "404": {
                        "description": "Team member not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/positions": {
            "get": {
                "tags": [
                    "Workstream"
                ],
                "summary": "Get all published Workstream positions",
                "operationId": "47dfa45829e57349a0ef31d42fa978da",
                "responses": {
                    "200": {
                        "description": "List of published positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Software Engineer"
                                            },
                                            "location": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "published"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch positions."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Acquisition": {
                "required": [
                    "name",
                    "email",
                    "city",
                    "state"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "city": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "state": {
                        "type": "string",
                        "example": "CA"
                    },
                    "status": {
                        "type": "string",
                        "example": "New"
                    },
                    "priority": {
                        "type": "string",
                        "example": "High"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "required": [
                    "name",
                    "email",
                    "message"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "message": {
                        "type": "string",
                        "example": "Hello, I have a question."
                    },
                    "contact_via_email": {
                        "type": "boolean",
                        "example": true
                    },
                    "contact_via_phone": {
                        "type": "boolean",
                        "example": false
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "priority": {
                        "type": "string",
                        "example": "medium"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Event": {
                "required": [
                    "title",
                    "description",
                    "datetime",
                    "location",
                    "capacity"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Tech Conference 2025"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/event-image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "A conference about the latest in technology."
                    },
                    "datetime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-30 15:29:58"
                    },
                    "location": {
                        "type": "string",
                        "example": "Los Angeles Convention Center"
                    },
                    "capacity": {
                        "type": "integer",
                        "example": 500
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Feedback": {
                "required": [
                    "customer_name",
                    "comment",
                    "location_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "customer_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great service and friendly staff."
                    },
                    "location_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "status": {
                        "type": "string",
                        "example": "Pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Job": {
                "required": [
                    "job_title",
                    "min_salary",
                    "max_salary",
                    "city",
                    "state",
                    "job_type",
                    "job_description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "job_title": {
                        "type": "string",
                        "example": "Software Engineer"
                    },
                    "min_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "max_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 70000
                    },
                    "city": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "state": {
                        "type": "string",
                        "example": "CA"
                    },
                    "job_type": {
                        "type": "string",
                        "example": "Full-time"
                    },
                    "job_description": {
                        "type": "string",
                        "example": "Develop and maintain software applications."
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "Location": {
                "required": [
                    "name",
                    "street",
                    "city",
                    "state",
                    "zip"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Downtown Office"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/location-image.jpg"
                    },
                    "street": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "state": {
                        "type": "string",
                        "example": "CA"
                    },
                    "zip": {
                        "type": "string",
                        "example": "90001"
                    },
                    "description": {
                        "type": "string",
                        "example": "Main headquarters"
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "lc_url": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Media": {
                "required": [
                    "user_id",
                    "file_name",
                    "file_path",
                    "thumbnail_path",
                    "file_size",
                    "mime_type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "file_name": {
                        "type": "string",
                        "example": "image.jpg"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "/storage/uploads/image.jpg"
                    },
                    "thumbnail_path": {
                        "type": "string",
                        "example": "/storage/uploads/thumbnails/thumb_image.jpg"
                    },
                    "file_size": {
                        "type": "integer",
                        "example": 204800
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Milestone": {
                "required": [
                    "date",
                    "title"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-01"
                    },
                    "title": {
                        "type": "string",
                        "example": "Project Kickoff"
                    },
                    "description": {
                        "type": "string",
                        "example": "Initial phase of the project."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "in_progress"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TeamMember": {
                "required": [
                    "name",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "role": {
                        "type": "string",
                        "example": "Project Manager"
                    },
                    "profile_image": {
                        "type": "string",
                        "example": "https://example.com/avatar.jpg",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "example": "Experienced project manager with a focus on agile methodologies.",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "user"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@gmail.com"
                    },
                    "image": {
                        "type": "string",
                        "example": "storage/user/avatar.jpg"
                    },
                    "role": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Acquisitions",
            "description": "Acquisitions"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Contacts",
            "description": "Contacts"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Feedback",
            "description": "Feedback"
        },
        {
            "name": "Jobs",
            "description": "Jobs"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Media",
            "description": "Media"
        },
        {
            "name": "Milestones",
            "description": "Milestones"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Team Members",
            "description": "Team Members"
        },
        {
            "name": "Workstream",
            "description": "Workstream"
        }
    ]
}